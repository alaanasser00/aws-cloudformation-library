AWSTemplateFormatVersion: 2010-09-09
Description: Deploy a VPC for a three tier architecture with 2 Availability Zones (AZs)

Parameters:
  EnvironmentName:
    Type: String
    Description: Please insert the environment name
  VPCCIDR:
    Description: Please insert the IP range for the VPC (CIDR notation required)
    Type: String
    Default: 10.16.0.0/16
  WebSubnetACIDR:
    Description: Please insert the IP range for the public Web subnet in the Availability Zone A
    Type: String
    Default: 10.16.0.0/19
  AppSubnetACIDR:
    Description: Please insert the IP range for the private App subnet in the Availability Zone A
    Type: String
    Default: 10.16.32.0/19
  DBSubnetACIDR:
    Description: Please insert the IP range for the private DB subnet in the Availability Zone A
    Type: String
    Default: 10.16.64.0/19
  WebSubnetBCIDR:
    Description: Please insert the IP range for the public Web subnet in the Availability Zone B
    Type: String
    Default: 10.16.128.0/19
  AppSubnetBCIDR:
    Description: Please insert the IP range for the private App subnet in the Availability Zone B
    Type: String
    Default: 10.16.160.0/19
  DBSubnetBCIDR:
    Description: Please insert the IP range for the private DB subnet in the Availability Zone B
    Type: String
    Default: 10.16.192.0/19

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Ref EnvironmentName

  # Internet Gateway Attachment
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # NAT Gateway EIPs
  NatGatewayEIPA:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGatewayEIPB:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  # NAT Gateway
  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      ConnectivityType: public
      AllocationId: !GetAtt NatGatewayEIPA.AllocationId
      SubnetId: !Ref WebSubnetA

  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      ConnectivityType: public
      AllocationId: !GetAtt NatGatewayEIPB.AllocationId
      SubnetId: !Ref WebSubnetB

  # Subnets AZ-A
  WebSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref WebSubnetACIDR
      MapPublicIpOnLaunch: True
      AvailabilityZone:  !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}_Web_A
  AppSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref AppSubnetACIDR
      MapPublicIpOnLaunch: False
      AvailabilityZone:  !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}_App_A
  DBSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref DBSubnetACIDR
      MapPublicIpOnLaunch: False
      AvailabilityZone:  !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}_DB_A

  # Subnets AZ-B
  WebSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref WebSubnetBCIDR
      MapPublicIpOnLaunch: True
      AvailabilityZone:  !Select [ 1, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}_Web_B
  AppSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref AppSubnetBCIDR
      MapPublicIpOnLaunch: False
      AvailabilityZone:  !Select [ 1, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}_App_B
  DBSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref DBSubnetBCIDR
      MapPublicIpOnLaunch: False
      AvailabilityZone:  !Select [ 1, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}_DB_B

  # Route Tables
  WebRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}_WebRT

  AppRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}_AppRT

  DBRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}_DBRT

  AppSubnetARoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref AppRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA

  AppSubnetBRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref AppRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB

  DBSubnetARoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref DBRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA

  DBSubnetBRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref DBRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB


  WebSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref WebRouteTable
      SubnetId: !Ref WebSubnetA

  WebSubnetRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref WebRouteTable
      SubnetId: !Ref WebSubnetB

  AppSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref AppRouteTable
      SubnetId: !Ref AppSubnetA

  AppSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref AppRouteTable
      SubnetId: !Ref AppSubnetB

  DBSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DBRouteTable
      SubnetId: !Ref DBSubnetA

  DBSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DBRouteTable
      SubnetId: !Ref DBSubnetB

Outputs:
  VPC:
    Description: VPC
    Value: !Ref VPC
  NATGatewayA:
    Description: NAT Gateway Availability Zone A
    Value: !Ref NatGatewayA
  NATGatewayB:
    Description: NAT Gateway Availability Zone B
    Value: !Ref NatGatewayB
  AvailabilityZoneA:
    Description: Availability Zone A
    Value: !GetAtt WebSubnetA.AvailabilityZone
  AvailabilityZoneB:
    Description: Availability Zone B
    Value: !GetAtt WebSubnetB.AvailabilityZone
  WebSubnetA:
    Description: Web Subnet Availability Zone A
    Value: !Ref WebSubnetA
  WebSubnetB:
    Description: Web Subnet Availability Zone B
    Value: !Ref WebSubnetB
  AppSubnetA:
    Description: Web Subnet Availability Zone A
    Value: !Ref AppSubnetA
  AppSubnetB:
    Description: Web Subnet Availability Zone B
    Value: !Ref AppSubnetB
  DBSubnetA:
    Description: Web Subnet Availability Zone A
    Value: !Ref DBSubnetA
  DBSubnetB:
    Description: Web Subnet Availability Zone B
    Value: !Ref DBSubnetB
